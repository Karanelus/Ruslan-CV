{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sites\\\\cv-ruslan\\\\src\\\\context\\\\CvRuslanContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useContext, useRef, useId, createContext, useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport project from \"../projects/projects.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CvRuslanContextContainer = /*#__PURE__*/createContext({});\nexport const useCvRuslanContext = () => {\n  _s();\n  return useContext(CvRuslanContextContainer);\n};\n_s(useCvRuslanContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst CvRuslanContext = ({\n  children\n}) => {\n  _s2();\n  const aboutProjectRef = useRef(null);\n  const navpanelRef = useRef(null);\n  const radioID = useId();\n  const [isMobileScreenDown, setIsMobileScreenDown] = useState(true);\n  const [isBurgerMenuOpen, setIsBurgerMenuOpen] = useState(true);\n  const userAgent = window.navigator.userAgent;\n  const [portfolioChecking, setPortfolioChecking] = useState({\n    projectNum: 1,\n    projectPhoto: 1\n  });\n  const projectsContainer = project;\n  return /*#__PURE__*/_jsxDEV(CvRuslanContextContainer.Provider, {\n    value: {\n      aboutProjectRef,\n      navpanelRef,\n      radioID,\n      isMobileScreenDown,\n      setIsMobileScreenDown,\n      isBurgerMenuOpen,\n      setIsBurgerMenuOpen,\n      portfolioChecking,\n      setPortfolioChecking,\n      projectsContainer,\n      userAgent\n    },\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s2(CvRuslanContext, \"vQhIUpKZkaRDuSR/LVyMmNhyEhQ=\", false, function () {\n  return [useId];\n});\n_c = CvRuslanContext;\nexport default CvRuslanContext;\nvar _c;\n$RefreshReg$(_c, \"CvRuslanContext\");","map":{"version":3,"names":["useContext","useRef","useId","createContext","useState","BrowserRouter","project","jsxDEV","_jsxDEV","CvRuslanContextContainer","useCvRuslanContext","_s","CvRuslanContext","children","_s2","aboutProjectRef","navpanelRef","radioID","isMobileScreenDown","setIsMobileScreenDown","isBurgerMenuOpen","setIsBurgerMenuOpen","userAgent","window","navigator","portfolioChecking","setPortfolioChecking","projectNum","projectPhoto","projectsContainer","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Sites/cv-ruslan/src/context/CvRuslanContext.tsx"],"sourcesContent":["import { useContext, useRef, useId, createContext, ReactNode, useState } from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport project from \"../projects/projects.json\";\r\n\r\ntype CvRuslanContextProps = {\r\n  children: ReactNode;\r\n};\r\n\r\ntype CvProjectType = {\r\n  id: number;\r\n  nameOfProject: string;\r\n  about: string;\r\n  img: {\r\n    num_1: string;\r\n    num_2: string;\r\n    num_3: string;\r\n  };\r\n  linkLive: string;\r\n  linkRepo: string;\r\n};\r\n\r\ntype CvPotfolio = {\r\n  projectNum: number;\r\n  projectPhoto: number;\r\n};\r\n\r\ntype CvRuslanContextContainerProps = {\r\n  aboutProjectRef: React.RefObject<HTMLElement>;\r\n  navpanelRef: React.RefObject<HTMLElement>;\r\n  isMobileScreenDown: boolean;\r\n  setIsMobileScreenDown: React.Dispatch<React.SetStateAction<boolean>>;\r\n  isBurgerMenuOpen: boolean;\r\n  setIsBurgerMenuOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  portfolioChecking: CvPotfolio;\r\n  setPortfolioChecking: React.Dispatch<React.SetStateAction<CvPotfolio>>;\r\n  projectsContainer: CvProjectType[];\r\n  userAgent: string;\r\n  radioID: string;\r\n};\r\n\r\nconst CvRuslanContextContainer = createContext({} as CvRuslanContextContainerProps);\r\n\r\nexport const useCvRuslanContext = () => {\r\n  return useContext(CvRuslanContextContainer);\r\n};\r\n\r\nconst CvRuslanContext = ({ children }: CvRuslanContextProps) => {\r\n  const aboutProjectRef = useRef<HTMLElement>(null);\r\n  const navpanelRef = useRef<HTMLElement>(null);\r\n  const radioID = useId();\r\n  const [isMobileScreenDown, setIsMobileScreenDown] = useState(true);\r\n  const [isBurgerMenuOpen, setIsBurgerMenuOpen] = useState(true);\r\n  const userAgent = window.navigator.userAgent;\r\n  const [portfolioChecking, setPortfolioChecking] = useState<CvPotfolio>({\r\n    projectNum: 1,\r\n    projectPhoto: 1,\r\n  });\r\n  const projectsContainer: CvProjectType[] = project;\r\n\r\n  return (\r\n    <CvRuslanContextContainer.Provider\r\n      value={{\r\n        aboutProjectRef,\r\n        navpanelRef,\r\n        radioID,\r\n        isMobileScreenDown,\r\n        setIsMobileScreenDown,\r\n        isBurgerMenuOpen,\r\n        setIsBurgerMenuOpen,\r\n        portfolioChecking,\r\n        setPortfolioChecking,\r\n        projectsContainer,\r\n        userAgent,\r\n      }}\r\n    >\r\n      <BrowserRouter>{children}</BrowserRouter>\r\n    </CvRuslanContextContainer.Provider>\r\n  );\r\n};\r\n\r\nexport default CvRuslanContext;\r\n"],"mappings":";;;AAAA,SAASA,UAAU,EAAEC,MAAM,EAAEC,KAAK,EAAEC,aAAa,EAAaC,QAAQ,QAAQ,OAAO;AACrF,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,OAAO,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAsChD,MAAMC,wBAAwB,gBAAGN,aAAa,CAAC,CAAC,CAAkC,CAAC;AAEnF,OAAO,MAAMO,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,OAAOX,UAAU,CAACS,wBAAwB,CAAC;AAC7C,CAAC;AAACE,EAAA,CAFWD,kBAAkB;AAI/B,MAAME,eAAe,GAAGA,CAAC;EAAEC;AAA+B,CAAC,KAAK;EAAAC,GAAA;EAC9D,MAAMC,eAAe,GAAGd,MAAM,CAAc,IAAI,CAAC;EACjD,MAAMe,WAAW,GAAGf,MAAM,CAAc,IAAI,CAAC;EAC7C,MAAMgB,OAAO,GAAGf,KAAK,CAAC,CAAC;EACvB,MAAM,CAACgB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACgB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAMkB,SAAS,GAAGC,MAAM,CAACC,SAAS,CAACF,SAAS;EAC5C,MAAM,CAACG,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtB,QAAQ,CAAa;IACrEuB,UAAU,EAAE,CAAC;IACbC,YAAY,EAAE;EAChB,CAAC,CAAC;EACF,MAAMC,iBAAkC,GAAGvB,OAAO;EAElD,oBACEE,OAAA,CAACC,wBAAwB,CAACqB,QAAQ;IAChCC,KAAK,EAAE;MACLhB,eAAe;MACfC,WAAW;MACXC,OAAO;MACPC,kBAAkB;MAClBC,qBAAqB;MACrBC,gBAAgB;MAChBC,mBAAmB;MACnBI,iBAAiB;MACjBC,oBAAoB;MACpBG,iBAAiB;MACjBP;IACF,CAAE;IAAAT,QAAA,eAEFL,OAAA,CAACH,aAAa;MAAAQ,QAAA,EAAEA;IAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAExC,CAAC;AAACrB,GAAA,CAhCIF,eAAe;EAAA,QAGHV,KAAK;AAAA;AAAAkC,EAAA,GAHjBxB,eAAe;AAkCrB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}