{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useLocalStorage = (key, defaultValue) => {\n  _s();\n  const [value, setValue] = useState(defaultValue);\n  useEffect(() => {\n    const item = localStorage.getItem(key);\n    if (!item) {\n      localStorage.setItem(key, JSON.stringify(defaultValue));\n    }\n    setValue(item ? JSON.parse(item) : defaultValue);\n    const handler = e => {\n      if (e.key !== key) return;\n      const lsi = localStorage.getItem(key);\n      setValue(JSON.parse(lsi !== null && lsi !== void 0 ? lsi : \"\"));\n    };\n    window.addEventListener(\"storage\", handler);\n    return () => {\n      window.removeEventListener(\"storage\", handler);\n    };\n  }, []);\n  const setValueWrap = value => {\n    try {\n      setValue(value);\n      localStorage.setItem(key, JSON.stringify(value));\n      if (typeof window !== \"undefined\") {\n        window.dispatchEvent(new StorageEvent(\"storage\", {\n          key\n        }));\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  return [value, setValueWrap];\n};\n_s(useLocalStorage, \"zp4Iw+LU/f7rg16WySk7ISePCcE=\");\nexport default useLocalStorage;","map":{"version":3,"names":["useEffect","useState","useLocalStorage","key","defaultValue","_s","value","setValue","item","localStorage","getItem","setItem","JSON","stringify","parse","handler","e","lsi","window","addEventListener","removeEventListener","setValueWrap","dispatchEvent","StorageEvent","console","error"],"sources":["E:/Sites/cv-ruslan/src/hooks/useLocalStorage.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useLocalStorage = <T,>(key: string, defaultValue: T): [T, (value: T) => void] => {\r\n  const [value, setValue] = useState(defaultValue);\r\n\r\n  useEffect(() => {\r\n    const item = localStorage.getItem(key);\r\n    if (!item) {\r\n      localStorage.setItem(key, JSON.stringify(defaultValue));\r\n    }\r\n    setValue(item ? JSON.parse(item) : defaultValue);\r\n\r\n    const handler = (e: StorageEvent) => {\r\n      if (e.key !== key) return;\r\n\r\n      const lsi = localStorage.getItem(key);\r\n      setValue(JSON.parse(lsi ?? \"\"));\r\n    };\r\n\r\n    window.addEventListener(\"storage\", handler);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"storage\", handler);\r\n    };\r\n  }, []);\r\n\r\n  const setValueWrap = (value: T) => {\r\n    try {\r\n      setValue(value);\r\n\r\n      localStorage.setItem(key, JSON.stringify(value));\r\n      if (typeof window !== \"undefined\") {\r\n        window.dispatchEvent(new StorageEvent(\"storage\", { key }));\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return [value, setValueWrap];\r\n};\r\n\r\nexport default useLocalStorage;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,eAAe,GAAGA,CAAKC,GAAW,EAAEC,YAAe,KAA8B;EAAAC,EAAA;EACrF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACG,YAAY,CAAC;EAEhDJ,SAAS,CAAC,MAAM;IACd,MAAMQ,IAAI,GAAGC,YAAY,CAACC,OAAO,CAACP,GAAG,CAAC;IACtC,IAAI,CAACK,IAAI,EAAE;MACTC,YAAY,CAACE,OAAO,CAACR,GAAG,EAAES,IAAI,CAACC,SAAS,CAACT,YAAY,CAAC,CAAC;IACzD;IACAG,QAAQ,CAACC,IAAI,GAAGI,IAAI,CAACE,KAAK,CAACN,IAAI,CAAC,GAAGJ,YAAY,CAAC;IAEhD,MAAMW,OAAO,GAAIC,CAAe,IAAK;MACnC,IAAIA,CAAC,CAACb,GAAG,KAAKA,GAAG,EAAE;MAEnB,MAAMc,GAAG,GAAGR,YAAY,CAACC,OAAO,CAACP,GAAG,CAAC;MACrCI,QAAQ,CAACK,IAAI,CAACE,KAAK,CAACG,GAAG,aAAHA,GAAG,cAAHA,GAAG,GAAI,EAAE,CAAC,CAAC;IACjC,CAAC;IAEDC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,OAAO,CAAC;IAE3C,OAAO,MAAM;MACXG,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEL,OAAO,CAAC;IAChD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,YAAY,GAAIf,KAAQ,IAAK;IACjC,IAAI;MACFC,QAAQ,CAACD,KAAK,CAAC;MAEfG,YAAY,CAACE,OAAO,CAACR,GAAG,EAAES,IAAI,CAACC,SAAS,CAACP,KAAK,CAAC,CAAC;MAChD,IAAI,OAAOY,MAAM,KAAK,WAAW,EAAE;QACjCA,MAAM,CAACI,aAAa,CAAC,IAAIC,YAAY,CAAC,SAAS,EAAE;UAAEpB;QAAI,CAAC,CAAC,CAAC;MAC5D;IACF,CAAC,CAAC,OAAOa,CAAC,EAAE;MACVQ,OAAO,CAACC,KAAK,CAACT,CAAC,CAAC;IAClB;EACF,CAAC;EAED,OAAO,CAACV,KAAK,EAAEe,YAAY,CAAC;AAC9B,CAAC;AAAChB,EAAA,CAtCIH,eAAe;AAwCrB,eAAeA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}